## kafka, redis docker - 로컬에서 열면 메모리 이슈로 인해 aws 사용할 예정

version: '3.8'

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  zookeeper:
    networks:
      - kafka-net
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOO_ENABLE_AUTH=yes
  kafka:
    networks:
      - kafka-net
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  kafdrop: ## kafka gui
    hostname: kafdrop
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "always"
    networks:
      - kafka-net
    ports: ## 9093: local port / 9000: docker in-port
      - "9093:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka

  redis:
    image: redis:latest
    ports: # 바인딩할 포트:내부 포트
      - "6380:6379"
    container_name: redis-container
    command: redis-server /usr/local/conf/redis.conf
    volumes: # 마운트할 볼륨 설정
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    restart: always


## https://betterprogramming.pub/kafka-with-java-spring-and-docker-asynchronous-communication-between-microservices-e1d00e120831